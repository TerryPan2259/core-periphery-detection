import csv
import numpy as np
import pandas as pd
import networkx as nx
import _cpalgorithm as _cp
import cpalgorithm as cp
from scipy.sparse import diags
from scipy.sparse.linalg import eigs

G=nx.karate_club_graph()
N = nx.number_of_nodes(G)
M = nx.number_of_edges(G) 
A = nx.to_scipy_sparse_matrix(G)
deg = np.array([d[1] for d in G.degree()])
denom =  1.0 / deg
denom[np.isnan(denom)] = 0
T = diags(denom) * A

<<<<<<< HEAD:example.py
d, v = eigs(T, k=1, sigma=1e-2);

iscore = np.sign(v)>0
print(iscore)
=======
be = cp.BE()

Q = []
be.detect(G)
c = be.get_pair_id()
x = be.is_core()

print(sum(be.score()))

#significance, p_values, q_tilde, s_tilde = cp.qstest(c, x, G, be, num_of_thread = 4, null_model = cp.erdos_renyi)
print(c,x)
#print(significance, p_values)
>>>>>>> daf3abd9862de4fdc9fb92b08403702a803436c0:examples/:w
